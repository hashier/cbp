type  SDL_Surface: struct {
  var flags : uint32 @ 0
  var format : []void @ 8
  var w : uint32 @ 16
  var h : uint32 @ 20
  var pitch : uint16 @ 24
  var pixels : []uint32 @ 32
}

func abi_c SDL_Init (flags:uint32) : uint32
func abi_c SDL_SetVideoMode (width1:uint32 height1:uint32 bpp1:uint32 flags1:uint32) : []SDL_Surface
func abi_c SDL_Flip (screen2:[]SDL_Surface) : uint32
func abi_c SDL_LockSurface (screen3:[]SDL_Surface) : uint32
func abi_c SDL_UnlockSurface (screen4:[]SDL_Surface x4:uint32 y4:uint32 w4:uint32 h4:uint32) : uint32
func abi_c SDL_Init (flags5:uint32) : uint32
func abi_c SDL_UpdateRect (screen6:[]SDL_Surface) : uint32

func main () : void {
  local var screen : []SDL_Surface

  call SDL_Init(0)
  screen = call SDL_SetVideoMode(800 600 32 0)
  call SDL_LockSurface(screen)
  local var i : uint32
  local var x : uint32
  local var y : uint32
  while 1 {
    for y = 0 .. 600
      for x = 0 .. 800
        screen[0].pixels[254] = 255
          # ((x | y + i) + 4 * i) +
          # 256 * ((x + 3 * i & y) + 5 * i) +
          # 65536 * ((x - 4 * i ^ y - 2 * i) + 6 *i)
    call SDL_UnlockSurface(screen)
    call SDL_UpdateRect(screen 0 0 0 0)
    i = i +1
  }
  call SDL_Flip(screen)
  while 1 0
}
